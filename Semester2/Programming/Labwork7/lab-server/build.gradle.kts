/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    application
    checkstyle
}

dependencies {
    api(project(":lab-common"))
    api(libs.org.apache.commons.lang3)
    api(libs.ch.qos.logback.logback.core)
    api(libs.ch.qos.logback.logback.classic)
    api(libs.com.google.code.gson.gson)
    api(libs.org.slf4j.slf4j.api)
    implementation("org.postgresql:postgresql:42.6.0")
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    mainClass = "ru.rmntim.server.Server"
}

tasks {
    val fatJar = register<Jar>("fatJar") {
        dependsOn.addAll(
            listOf(
                "compileJava",
                "processResources",
                ":lab-common:jar"
            )
        ) // We need this for Gradle optimization to work
        archiveClassifier.set("fat") // Naming the jar
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        manifest { attributes(mapOf("Main-Class" to application.mainClass)) } // Provided we set it up in the application plugin configuration
        val sourcesMain = sourceSets.main.get()
        val contents = configurations.runtimeClasspath.get()
            .map { if (it.isDirectory) it else zipTree(it) } +
                sourcesMain.output
        from(contents)
    }
    build {
        dependsOn(fatJar) // Trigger fat jar creation during build
    }
}

description = "lab-server"
